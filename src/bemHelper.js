import React, {Component} from 'react'
import classNames from 'classnames'
import _ from 'lodash'

/*
  Util for bem manipulations
 */
var BemHelper;

BemHelper = (function() {
  BemHelper.prototype.defaults = {
    name: 'uv-bem_helper',
    arrMods: [],
    hashMods: {},
    stringMods: '',
    stringClasses: ''
  };

  function BemHelper(options) {
    this.config = _.defaults({}, options, this.defaults);
    this.cls = {};
    this.name = this.config.name;
    this.cls[this.name] = true;
    this.init();
  }

  BemHelper.prototype.addArrMods = function(mods) {
    return _.forEach(mods, (function(_this) {
      return function(m) {
        if (m) {
          return _this.cls[_this.name + "--" + (m.trim())] = true;
        }
      };
    })(this));
  };

  BemHelper.prototype.addHashMods = function(mods) {
    return _.forIn(mods, (function(_this) {
      return function(mod, modName) {
        if (mod) {
          return _this.cls[_this.name + "--" + modName] = true;
        }
      };
    })(this));
  };

  BemHelper.prototype.addStringMods = function(mods) {
    return mods.split(',').forEach((function(_this) {
      return function(m) {
        if (m) {
          return _this.cls[_this.name + "--" + (m.trim())] = true;
        }
      };
    })(this));
  };

  BemHelper.prototype.addStringClasses = function(cls) {
    return cls.split(',').forEach((function(_this) {
      return function(m) {
        if (m) {
          return _this.cls[m.trim()] = true;
        }
      };
    })(this));
  };

  BemHelper.prototype.init = function() {
    this.addArrMods(this.config.arrMods);
    this.addHashMods(this.config.hashMods);
    this.addStringMods(this.config.stringMods);
    return this.addStringClasses(this.config.stringClasses);
  };

  BemHelper.prototype.toString = function() {
    return classNames(this.cls);
  };

  return BemHelper;

})();

module.exports = BemHelper;

// ---
// generated by coffee-script 1.9.2